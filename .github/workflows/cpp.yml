name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created]

env:
  IMAGE_NAME: foodculator

jobs:
  build:  
    runs-on: ubuntu-latest
    steps:
    - name: Install libsqlite3-dev
      run: sudo apt update -y; sudo apt install -y libsqlite3-dev
    - name: Get Cmake
      uses: lukka/get-cmake@v3.17.1
    - uses: actions/checkout@v2
      with: 
        submodules: recursive
    - name: Run CMake and Make
      uses: lukka/run-cmake@v2.0
      with:
        cmakeBuildType: Release
    - name: Bundle
      run: |
        mkdir ${{ github.workspace }}/../../_out 
        cd ${{ github.workspace }}/../../_out 
        mv ${{ github.workspace }}/../../_temp/foodculator ${{ github.workspace }}/static .
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: foodculator ${{ github.work }}
        path: ${{ github.workspace }}/../../_out
    - name: Build the Docker image
      run: docker build ${{ github.workspace }}/../../_out --file ${{ github.workspace }}/Dockerfile --tag image 

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag image $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
